<Page x:Class="Paymetheus.PurchaseTickets"
      xmlns:local="clr-namespace:Paymetheus" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:vm="clr-namespace:Paymetheus.ViewModels"
      xmlns:f="clr-namespace:Paymetheus.Framework;assembly=Paymetheus.Framework"
      mc:Ignorable="d"
      x:Name="Page"
      WindowTitle="Page"
      FlowDirection="LeftToRight"
      WindowWidth="640" WindowHeight="480" d:DesignWidth="780" d:DesignHeight="1500"
      DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=PurchaseTicketsViewModel}">

    <ScrollViewer Style="{StaticResource MainPaneScrollViewerStyle}">
        <StackPanel Margin="40 20 40 0">
            <StackPanel>
                <TextBlock Margin="0 0 0 10" Grid.Column="0" Text="Purchase tickets" Style="{StaticResource shellMediumHeaderTextBlockStyle}"/>
                <TextBlock Margin="0 0 0 20" Grid.Column="0" Style="{StaticResource shellDescriptionTextBlockStyle}">
                    In order to stake mine, you must make a deposit to the network in the form of a ticket.
                    The ticket enters the owner in a lottery for the next several months, at which time it
                    may be chosen at any block for validation.
                    <LineBreak/>After being chosen randomly, the ticket owner must produce a vote transaction to
                    validate the previous block.  <Bold>Paymetheus does not vote</Bold> and tickets must only
                    be purchased with voting rights assigned to a stake pool or your own separate, always running
                    voting wallet.  The safest way to ensure that your vote succeeds is use a stake pool.
                </TextBlock>
            </StackPanel>

            <TextBlock FontSize="16">
                <Run Text="Ticket difficulty:"/>
                <Run Text="{Binding Path=SynchronizerViewModel.TicketPrice, Source={StaticResource ViewModelLocator}, Mode=OneWay, StringFormat={}{0} DCR}"/>
            </TextBlock>
            <TextBlock FontSize="16" Margin="0 0 0 40">
                <Run Text="Blocks until retarget:"/>
                <Run Text="{Binding Path=SynchronizerViewModel.BlocksUntilTicketPriceRetarget, Source={StaticResource ViewModelLocator}, Mode=OneWay}"/>
            </TextBlock>

            <Grid>
                <Grid.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource shellDescriptionTextBlockStyle}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource tooltipAlertTextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Margin" Value="0 1"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Width" Value="140"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="0 2"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Source account"/>
                <ComboBox Grid.Row="0" Grid.Column="1" Width="250" HorizontalAlignment="Left"
                          ItemsSource="{Binding Source={StaticResource ViewModelLocator}, Path=SynchronizerViewModel.Accounts}"
                          SelectedItem="{Binding SelectedSourceAccount}"
                          ItemTemplate="{StaticResource ComboBoxAccountDataTemplate}"
                          Style="{DynamicResource ComboBoxStyleWithCurrency}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"/>

                <TextBlock Grid.Row="1" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Tickets to purchase"/>
                <TextBox Grid.Row="1" Grid.Column="1"
                         Text="{Binding TicketsToPurchase, ValidatesOnExceptions=True}" Height="22" Margin="0,1,0,0" VerticalAlignment="Top"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="2" Text="Ticket fee (DCR/kB)"/>
                <TextBox Grid.Row="2" Grid.Column="1"
                         Text="{Binding TicketFee, ValidatesOnExceptions=True}"
                         PreviewTextInput="OutputAmountTextBox_PreviewTextInput"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="3" Text="Split fee (DCR/kB)"/>
                <TextBox Grid.Row="3" Grid.Column="1"
                         Text="{Binding SplitFee, ValidatesOnExceptions=True}"
                         PreviewTextInput="OutputAmountTextBox_PreviewTextInput"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="4" Text="Expiry (blocks)" Style="{StaticResource shellDescriptionTextBlockStyle}" />
                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Expiry, ValidatesOnExceptions=True}"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="5" Text="Stake pool preference"/>
                <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                    <ComboBox Width="250" HorizontalAlignment="Left"
                          ItemsSource="{Binding Path=ConfiguredStakePools}"
                          DisplayMemberPath="DisplayName"
                          SelectedItem="{Binding SelectedStakePool}"/>
                    <Button Content="Manage pools" Command="{Binding ManageStakePools}" Style="{StaticResource ButtonWhite}" Margin="6 0"/>
                </StackPanel>

                <TextBlock Grid.Row="6" Text="Voting address" Visibility="{Binding VotingAddressOptionVisibility}"/>
                <TextBox Grid.Row="6" Grid.Column="1" Visibility="{Binding VotingAddressOptionVisibility}"
                         Text="{Binding VotingAddress, Mode=OneWayToSource, ValidatesOnExceptions=True}"
                         Width="250" HorizontalContentAlignment="Left"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="7" Text="Pool fee address" Visibility="{Binding ManualPoolOptionsVisibility}"/>
                <TextBox Grid.Row="7" Grid.Column="1" Visibility="{Binding ManualPoolOptionsVisibility}"
                         Text="{Binding PoolFeeAddress, Mode=OneWayToSource, ValidatesOnExceptions=True}"
                         Width="250" HorizontalAlignment="Left"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>

                <TextBlock Grid.Row="8" Text="Pool fees (%)" Visibility="{Binding ManualPoolOptionsVisibility}"/>
                <TextBox Grid.Row="8" Grid.Column="1" Visibility="{Binding ManualPoolOptionsVisibility}"
                         Text="{Binding PoolFees, ValidatesOnExceptions=True}"
                         f:AttachableProperties.UpdateSourceOnEnterProperty="TextBox.Text"/>
            </Grid>

            <Button Style="{DynamicResource ButtonBlue}" Margin="0 20 0 0" Content="PURCHASE" HorizontalAlignment="Left" Command="{Binding Execute}" Width="100"/>

            <TextBox Text="{Binding ResponseString, Mode=TwoWay}" Foreground="#FF0C1E3E" FontSize="16" Margin="0 40 0 0" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="Wrap"/>

            <StackPanel Visibility="{Binding VotePreferencesVisibility, Mode=OneTime}">
                <StackPanel.Resources>
                    <DataTemplate x:Key="AgendaChoiceTemplate">
                        <Grid x:Name="ItemGrid" Width="540" Margin="0 0 0 12" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding AgendaDescription, Mode=OneTime}" FontSize="16" TextWrapping="Wrap"/>
                            <ComboBox Grid.Row="1" ItemsSource="{Binding Choices}" SelectedItem="{Binding SelectedChoice}" DisplayMemberPath="ID" HorizontalAlignment="Left" MinWidth="120"/>
                        </Grid>
                    </DataTemplate>
                </StackPanel.Resources>
                <TextBlock FontSize="20" Margin="0 0 0 12">
                    <Run Text="Voting preferences"/>
                    <Run Text="(v"/><Run Text="{Binding VoteVersion, FallbackValue=#, Mode=OneTime}"/><Run Text=")"/>
                </TextBlock>
                <ItemsControl Padding="0 0 0 20" HorizontalContentAlignment="Left" ScrollViewer.CanContentScroll="True"
                              ItemsSource="{Binding AgendaChoices, Mode=OneTime}" ItemTemplate="{StaticResource AgendaChoiceTemplate}"/>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Page>
